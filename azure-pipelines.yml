# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  azureContainerRegistry: appregistryjahohm.azurecr.io
  azureSubscriptionEndpoint: ACRServiceConnection
steps:
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'ACRServiceConnection'
    #azureContainerRegistry: $(azureContainerRegistry)
    azureContainerRegistry: '{"loginServer":"appregistryjahohm.azurecr.io", "id" : "/subscriptions/2bb57cf8-9700-460e-8cb9-034c7126e491/resourceGroups/developerRG/providers/Microsoft.ContainerRegistry/registries/appregistryjahohm"}'
    dockerComposeFile: '**/docker-compose.yml'
    additionalDockerComposeFiles: 'docker-compose.override.yml'
    action: 'Build services'
    includeLatestTag: true
    
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'ACRServiceConnection'
    azureContainerRegistry: '{"loginServer":"appregistryjahohm.azurecr.io", "id" : "/subscriptions/2bb57cf8-9700-460e-8cb9-034c7126e491/resourceGroups/developerRG/providers/Microsoft.ContainerRegistry/registries/appregistryjahohm"}'
    dockerComposeFile: '**/docker-compose.yml'
    additionalDockerComposeFiles: 'docker-compose.override.yml'
    action: 'Push services'